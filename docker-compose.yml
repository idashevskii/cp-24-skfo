x-logging: &logging
  options:
    max-size: "256k"
    max-file: "1"
  driver: json-file

services:

  reverse-proxy:
    restart: always
    build:
      context: ./services/reverse-proxy
    environment:
      - UI_BASE_URI=$UI_BASE_URI
      - ADMIN_UI_BASE_URI=$ADMIN_UI_BASE_URI
      - API_BASE_URI=$API_BASE_URI
    ports:
      - "${HOST_IP}:80:80"
      - "${HOST_IP}:443:443"
    volumes:
      - certbot-dist:/etc/letsencrypt/:ro
      - certbot-www:/var/www/certbot:ro
    logging: *logging

  ui:
    build:
      context: ./services/ui
      network: host
      args:
        - BASE_URI=$UI_BASE_URI
    restart: always
    logging: *logging
    networks:
      default:
        ipv4_address: "172.22.1.101"
    environment:
      - API_BASE_URI=$API_BASE_URI

  admin-ui:
    build:
      context: ./services/admin-ui
      network: host
      args:
        - BASE_URI=$ADMIN_UI_BASE_URI
    restart: always
    logging: *logging
    networks:
      default:
        ipv4_address: "172.22.1.102"
    environment:
      - API_BASE_URI=$API_BASE_URI

  backend:
    build:
      context: ./services/backend
      network: host
    restart: always
    volumes:
      - backend-opeani-files:/app/data
      - backend-opeani-storage:/storage
    environment:
      - EMBEDDING_DIM=$VECTOR_SIZE
      - STORAGE_DIR=/storage/context
      - OPENAI_BASE_URL=$OPENAI_BASE_URL
      - OPENAI_API_BASE=$OPENAI_BASE_URL
      - VECTOR_STORE_PROVIDER=qdrant
      - QDRANT_URL=$QDRANT_URL
      - QDRANT_COLLECTION=$QDRANT_COLLECTION_NAME
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://ollama:11434}
    depends_on:
      - setup
    logging: *logging
    networks:
      default:
        ipv4_address: "172.22.1.103"

  setup:
    image: curlimages/curl:8.8.0
    restart: 'no'
    volumes:
      - ./scripts:/ragapp
    environment:
      - QDRANT_URL=$QDRANT_URL
      - COLLECTION_NAME=$QDRANT_COLLECTION_NAME
      - DISTANCE_METRIC=Cosine
      - VECTOR_SIZE=$VECTOR_SIZE
    command: /ragapp/create_qdrant_collection.sh
    depends_on:
      - qdrant

  certbot:
    restart: always
    build:
      context: ./services/certbot
    volumes:
      - certbot-dist:/etc/letsencrypt/:rw
      - certbot-www:/var/www/certbot:rw
    environment:
      - DOMAINS=$DOMAIN_NAME
      - EMAIL=$CERTBOT_EMAIL
      - CERT_MODE=prod
    logging: *logging

  qdrant:
    image: qdrant/qdrant:v1.10.0
    restart: always
    ports:
      - $INTRANET_IP:6333:6333
      - $INTRANET_IP:6334:6334
    logging: *logging
    volumes:
      - "qdrant_data:/qdrant/storage:z"

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: "172.22.0.0/16"
          gateway: "172.22.0.1"

volumes:
  qdrant_data:
  # backend-files:
  # backend-storage:
  backend-opeani-files:
  backend-opeani-storage:
  certbot-dist:
  certbot-www:
  postgres-data:
